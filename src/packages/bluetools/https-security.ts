import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.https_security.xml
/** <p>The HTTPS Security characteristic contains the known authenticity of the HTTPS Server certificate for the URI.</p> */
export interface HttpsSecurity {
    /**
     * <p>Format: `boolean`</p>
     * <p>The known authenticity of the HTTP Server certificate for the URI.</p>
     * | Key | Description |
     * | --- | ----------- |
     * | 0   | False       |
     * | 1   | True        |
     *
     */
    httpsSecurity: boolean;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.https_security.xml | Https Security} */
export class HttpsSecurityImpl implements HttpsSecurity {
    public static readonly UUID_PREFIX = 0x2abb;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.https_security";
    public static readonly NAME = "HTTPS Security";

    /** Parse from a DataView into {@link HttpsSecurity}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): HttpsSecurityImpl {
        return new HttpsSecurityImpl(httpsSecurityFromDataView(dataView, indexStart));
    }

    public readonly httpsSecurity: boolean;

    public constructor(httpsSecurity: HttpsSecurity) {
        this.httpsSecurity = httpsSecurity.httpsSecurity;
    }
}

/** Parse from a DataView into {@link HttpsSecurity}. */
export function httpsSecurityFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): HttpsSecurity {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    /** */
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const httpsSecurity = $dvr.bool();
    return { httpsSecurity };
}
