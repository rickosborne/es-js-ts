import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.alert_category_id.xml
/**
 * <p>Categories of alerts/messages.</p>
 * <p>The value 0x01 is interpreted as ?Email?</p>
 * <p>The value of the characteristic is an unsigned 8 bit integer that has a fixed point exponent of 0. The Alert Category ID characteristic defines the predefined categories of messages as an enumeration.</p>
 */
export interface AlertCategoryId {
    /**
     * <p>Format: `uint8`</p>
     * <p>Minimum: 0</p>
     * <p>Maximum: 255</p>
     * | Key | Description                                                           |
     * | --- | --------------------------------------------------------------------- |
     * | 0   | Simple Alert: General text alert or non-text alert                    |
     * | 1   | Email: Alert when Email messages arrives                              |
     * | 2   | News: News feeds such as RSS, Atom                                    |
     * | 3   | Call: Incoming call                                                   |
     * | 4   | Missed call: Missed Call                                              |
     * | 5   | SMS/MMS: SMS/MMS message arrives                                      |
     * | 6   | Voice mail: Voice mail                                                |
     * | 7   | Schedule: Alert occurred on calendar, planner                         |
     * | 8   | High Prioritized Alert: Alert that should be handled as high priority |
     * | 9   | Instant Message: Alert for incoming instant messages                  |
     *
     * <p>Reserved for future use: 10 to 250</p>
     */
    categoryID: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.alert_category_id.xml | Alert Category Id} */
export class AlertCategoryIdImpl implements AlertCategoryId {
    public static readonly UUID_PREFIX = 0x2a43;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.alert_category_id";
    public static readonly NAME = "Alert Category ID";

    /** Parse from a DataView into {@link AlertCategoryId}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): AlertCategoryIdImpl {
        return new AlertCategoryIdImpl(alertCategoryIdFromDataView(dataView, indexStart));
    }

    public readonly categoryID: number;

    public constructor(alertCategoryId: AlertCategoryId) {
        this.categoryID = alertCategoryId.categoryID;
    }
}

/** Parse from a DataView into {@link AlertCategoryId}. */
export function alertCategoryIdFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): AlertCategoryId {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    /** */
    /**
     * | value | description                                                           |
     * | ----- | --------------------------------------------------------------------- |
     * | 0     | Simple Alert: General text alert or non-text alert                    |
     * | 1     | Email: Alert when Email messages arrives                              |
     * | 2     | News: News feeds such as RSS, Atom                                    |
     * | 3     | Call: Incoming call                                                   |
     * | 4     | Missed call: Missed Call                                              |
     * | 5     | SMS/MMS: SMS/MMS message arrives                                      |
     * | 6     | Voice mail: Voice mail                                                |
     * | 7     | Schedule: Alert occurred on calendar, planner                         |
     * | 8     | High Prioritized Alert: Alert that should be handled as high priority |
     * | 9     | Instant Message: Alert for incoming instant messages                  |
     */
    const categoryID = $dvr.uint8();
    return { categoryID };
}
