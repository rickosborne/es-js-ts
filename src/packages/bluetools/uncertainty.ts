import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.uncertainty.xml
/** <p>The Uncertainty characteristic describes the uncertainty of the location information the device exposes.</p> */
export interface Uncertainty {
    /**
     * | value | description      |
     * | ----- | ---------------- |
     * | 0     | less than 0.1m   |
     * | 1     | 0.1-1m           |
     * | 2     | 1-2m             |
     * | 3     | 2-5m             |
     * | 4     | 5-10m            |
     * | 5     | 10-50m           |
     * | 6     | greater than 50m |
     * | 7     | N/A              |
     */
    precision: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | stationary  |
     * | 1     | mobile      |
     */
    stationary: number;
    /**
     * <p>Format: `uint8`</p>
     *
     * Bit field:
     *
     * | index | size | name                    |
     * | ----- | ---- | ----------------------- |
     * | 0     | 1    | Stationary              |
     * | 1     | 3    | Update Time             |
     * | 4     | 3    | Precision               |
     * | 7     | 1    | Reserved for future use |
     *
     */
    uncertainty: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | upto 3s     |
     * | 1     | upto 4s     |
     * | 2     | upto 6s     |
     * | 3     | upto 12s    |
     * | 4     | upto 28s    |
     * | 5     | upto 89s    |
     * | 6     | upto 426s   |
     * | 7     | 3541s       |
     */
    updateTime: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.uncertainty.xml | Uncertainty} */
export class UncertaintyImpl implements Uncertainty {
    public static readonly UUID_PREFIX = 0x2ab4;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.uncertainty";
    public static readonly NAME = "Uncertainty";

    /** Parse from a DataView into {@link Uncertainty}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): UncertaintyImpl {
        return new UncertaintyImpl(uncertaintyFromDataView(dataView, indexStart));
    }

    public readonly precision: number;
    public readonly stationary: number;
    public readonly uncertainty: number;
    public readonly updateTime: number;

    public constructor(uncertainty: Uncertainty) {
        this.precision = uncertainty.precision;
        this.stationary = uncertainty.stationary;
        this.uncertainty = uncertainty.uncertainty;
        this.updateTime = uncertainty.updateTime;
    }
}

/** Parse from a DataView into {@link Uncertainty}. */
export function uncertaintyFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): Uncertainty {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const uncertainty = $dvr.uint8();
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | stationary  |
     * | 1     | mobile      |
     */
    const stationary = uncertainty & 0b0000_0001;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | upto 3s     |
     * | 1     | upto 4s     |
     * | 2     | upto 6s     |
     * | 3     | upto 12s    |
     * | 4     | upto 28s    |
     * | 5     | upto 89s    |
     * | 6     | upto 426s   |
     * | 7     | 3541s       |
     */
    const updateTime = (uncertainty & 0b0000_1110) >> 1;
    /**
     * | value | description      |
     * | ----- | ---------------- |
     * | 0     | less than 0.1m   |
     * | 1     | 0.1-1m           |
     * | 2     | 1-2m             |
     * | 3     | 2-5m             |
     * | 4     | 5-10m            |
     * | 5     | 10-50m           |
     * | 6     | greater than 50m |
     * | 7     | N/A              |
     */
    const precision = (uncertainty & 0b0111_0000) >> 4;
    return { precision, stationary, uncertainty, updateTime };
}
