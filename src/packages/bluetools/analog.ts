import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.analog.xml
/** <p>The Analog characteristic is used to read or write the value of one of the IO Module?s analog signals.</p> */
export interface Analog {
    /** <p>Format: `uint16`</p> */
    analog: number;
}

/**
 * The Octet Order in the above table is in the order of LSO to MSO, where LSO = Least Significant Octet and MSO = Most Significant Octet.
 * @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.analog.xml | Analog}
 */
export class AnalogImpl implements Analog {
    public static readonly UUID_PREFIX = 0x2a58;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.analog";
    public static readonly NAME = "Analog";

    /** Parse from a DataView into {@link Analog}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): AnalogImpl {
        return new AnalogImpl(analogFromDataView(dataView, indexStart));
    }

    public readonly analog: number;

    public constructor(analog: Analog) {
        this.analog = analog.analog;
    }
}

/** Parse from a DataView into {@link Analog}. */
export function analogFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): Analog {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const analog = $dvr.uint16();
    return { analog };
}
