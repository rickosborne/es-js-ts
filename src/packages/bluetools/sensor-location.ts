import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.sensor_location.xml
/** <p>The Sensor Location characteristic is used to expose the location of the sensor.</p> */
export interface SensorLocation {
    /**
     * <p>Format: `uint8`</p>
     * | Key | Description  |
     * | --- | ------------ |
     * | 0   | Other        |
     * | 1   | Top of shoe  |
     * | 2   | In shoe      |
     * | 3   | Hip          |
     * | 4   | Front Wheel  |
     * | 5   | Left Crank   |
     * | 6   | Right Crank  |
     * | 7   | Left Pedal   |
     * | 8   | Right Pedal  |
     * | 9   | Front Hub    |
     * | 10  | Rear Dropout |
     * | 11  | Chainstay    |
     * | 12  | Rear Wheel   |
     * | 13  | Rear Hub     |
     * | 14  | Chest        |
     * | 15  | Spider       |
     * | 16  | Chain Ring   |
     *
     * <p>Reserved for future use: 17 to 255</p>
     */
    sensorLocation: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.sensor_location.xml | Sensor Location} */
export class SensorLocationImpl implements SensorLocation {
    public static readonly UUID_PREFIX = 0x2a5d;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.sensor_location";
    public static readonly NAME = "Sensor Location";

    /** Parse from a DataView into {@link SensorLocation}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): SensorLocationImpl {
        return new SensorLocationImpl(sensorLocationFromDataView(dataView, indexStart));
    }

    public readonly sensorLocation: number;

    public constructor(sensorLocation: SensorLocation) {
        this.sensorLocation = sensorLocation.sensorLocation;
    }
}

/** Parse from a DataView into {@link SensorLocation}. */
export function sensorLocationFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): SensorLocation {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    /** */
    /**
     * | value | description  |
     * | ----- | ------------ |
     * | 0     | Other        |
     * | 1     | Top of shoe  |
     * | 2     | In shoe      |
     * | 3     | Hip          |
     * | 4     | Front Wheel  |
     * | 5     | Left Crank   |
     * | 6     | Right Crank  |
     * | 7     | Left Pedal   |
     * | 8     | Right Pedal  |
     * | 9     | Front Hub    |
     * | 10    | Rear Dropout |
     * | 11    | Chainstay    |
     * | 12    | Rear Wheel   |
     * | 13    | Rear Hub     |
     * | 14    | Chest        |
     * | 15    | Spider       |
     * | 16    | Chain Ring   |
     */
    const sensorLocation = $dvr.uint8();
    return { sensorLocation };
}
