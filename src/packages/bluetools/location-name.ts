import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.location_name.xml
/** <p>The Location Name characteristic describes the name of the location the device is installed in.</p> */
export interface LocationName {
    /** <p>Format: `utf8s`</p> */
    locationName: string;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.location_name.xml | Location Name} */
export class LocationNameImpl implements LocationName {
    public static readonly UUID_PREFIX = 0x2ab5;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.location_name";
    public static readonly NAME = "Location Name";

    /** Parse from a DataView into {@link LocationName}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): LocationNameImpl {
        return new LocationNameImpl(locationNameFromDataView(dataView, indexStart));
    }

    public readonly locationName: string;

    public constructor(locationName: LocationName) {
        this.locationName = locationName.locationName;
    }
}

/** Parse from a DataView into {@link LocationName}. */
export function locationNameFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): LocationName {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const locationName = $dvr.utf8s();
    return { locationName };
}
