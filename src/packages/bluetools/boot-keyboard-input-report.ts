import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.boot_keyboard_input_report.xml
/** <p>The Boot Keyboard Input Report characteristic is used to transfer fixed format and length Input Report data between a HID Host operating in Boot Protocol Mode and a HID Service corresponding to a boot keyboard.</p> */
export interface BootKeyboardInputReport {
    /** <p>Format: `uint8`</p> */
    bootKeyboardInputReportValue: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.boot_keyboard_input_report.xml | Boot Keyboard Input Report} */
export class BootKeyboardInputReportImpl implements BootKeyboardInputReport {
    public static readonly UUID_PREFIX = 0x2a22;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.boot_keyboard_input_report";
    public static readonly NAME = "Boot Keyboard Input Report";

    /** Parse from a DataView into {@link BootKeyboardInputReport}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): BootKeyboardInputReportImpl {
        return new BootKeyboardInputReportImpl(bootKeyboardInputReportFromDataView(dataView, indexStart));
    }

    public readonly bootKeyboardInputReportValue: number;

    public constructor(bootKeyboardInputReport: BootKeyboardInputReport) {
        this.bootKeyboardInputReportValue = bootKeyboardInputReport.bootKeyboardInputReportValue;
    }
}

/** Parse from a DataView into {@link BootKeyboardInputReport}. */
export function bootKeyboardInputReportFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): BootKeyboardInputReport {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const bootKeyboardInputReportValue = $dvr.uint8();
    return { bootKeyboardInputReportValue };
}
