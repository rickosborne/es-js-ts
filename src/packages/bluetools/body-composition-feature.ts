import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.body_composition_feature.xml
export interface BodyCompositionFeature {
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    basalMetabolismSupported: number;
    /**
     * <p>Format: `32bit`</p>
     *
     * Bit field:
     *
     * | index | size | name                          |
     * | ----- | ---- | ----------------------------- |
     * | 0     | 1    | Time Stamp Supported          |
     * | 1     | 1    | Multiple Users Supported      |
     * | 2     | 1    | Basal Metabolism Supported    |
     * | 3     | 1    | Muscle Percentage Supported   |
     * | 4     | 1    | Muscle Mass Supported         |
     * | 5     | 1    | Fat Free Mass Supported       |
     * | 6     | 1    | Soft Lean Mass Supported      |
     * | 7     | 1    | Body Water Mass Supported     |
     * | 8     | 1    | Impedance Supported           |
     * | 9     | 1    | Weight Supported              |
     * | 10    | 1    | Height Supported              |
     * | 11    | 4    | Mass Measurement Resolution   |
     * | 15    | 3    | Height Measurement Resolution |
     * | 18    | 14   | Reserved for future use       |
     *
     */
    bodyCompositionFeature: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    bodyWaterMassSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    fatFreeMassSupported: number;
    /**
     * | value | description                           |
     * | ----- | ------------------------------------- |
     * | 0     | Not Specified                         |
     * | 1     | Resolution of 0.01 meter or 1 inch    |
     * | 2     | Resolution of 0.005 meter or 0.5 inch |
     * | 3     | Resolution of 0.001 meter or 0.1 inch |
     */
    heightMeasurementResolution: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    heightSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    impedanceSupported: number;
    /**
     * | value | description                       |
     * | ----- | --------------------------------- |
     * | 0     | Not Specified                     |
     * | 1     | Resolution of 0.5 kg or 1 lb      |
     * | 2     | Resolution of 0.2 kg or 0.5 lb    |
     * | 3     | Resolution of 0.1 kg or 0.2 lb    |
     * | 4     | Resolution of 0.05 kg or 0.1 lb   |
     * | 5     | Resolution of 0.02 kg or 0.05 lb  |
     * | 6     | Resolution of 0.01 kg or 0.02 lb  |
     * | 7     | Resolution of 0.005 kg or 0.01 lb |
     */
    massMeasurementResolution: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    multipleUsersSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    muscleMassSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    musclePercentageSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    softLeanMassSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    timeStampSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    weightSupported: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.body_composition_feature.xml | Body Composition Feature} */
export class BodyCompositionFeatureImpl implements BodyCompositionFeature {
    public static readonly UUID_PREFIX = 0x2a9b;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.body_composition_feature";
    public static readonly NAME = "Body Composition Feature";

    /** Parse from a DataView into {@link BodyCompositionFeature}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): BodyCompositionFeatureImpl {
        return new BodyCompositionFeatureImpl(bodyCompositionFeatureFromDataView(dataView, indexStart));
    }

    public readonly basalMetabolismSupported: number;
    public readonly bodyCompositionFeature: number;
    public readonly bodyWaterMassSupported: number;
    public readonly fatFreeMassSupported: number;
    public readonly heightMeasurementResolution: number;
    public readonly heightSupported: number;
    public readonly impedanceSupported: number;
    public readonly massMeasurementResolution: number;
    public readonly multipleUsersSupported: number;
    public readonly muscleMassSupported: number;
    public readonly musclePercentageSupported: number;
    public readonly softLeanMassSupported: number;
    public readonly timeStampSupported: number;
    public readonly weightSupported: number;

    public constructor(bodyCompositionFeature: BodyCompositionFeature) {
        this.basalMetabolismSupported = bodyCompositionFeature.basalMetabolismSupported;
        this.bodyCompositionFeature = bodyCompositionFeature.bodyCompositionFeature;
        this.bodyWaterMassSupported = bodyCompositionFeature.bodyWaterMassSupported;
        this.fatFreeMassSupported = bodyCompositionFeature.fatFreeMassSupported;
        this.heightMeasurementResolution = bodyCompositionFeature.heightMeasurementResolution;
        this.heightSupported = bodyCompositionFeature.heightSupported;
        this.impedanceSupported = bodyCompositionFeature.impedanceSupported;
        this.massMeasurementResolution = bodyCompositionFeature.massMeasurementResolution;
        this.multipleUsersSupported = bodyCompositionFeature.multipleUsersSupported;
        this.muscleMassSupported = bodyCompositionFeature.muscleMassSupported;
        this.musclePercentageSupported = bodyCompositionFeature.musclePercentageSupported;
        this.softLeanMassSupported = bodyCompositionFeature.softLeanMassSupported;
        this.timeStampSupported = bodyCompositionFeature.timeStampSupported;
        this.weightSupported = bodyCompositionFeature.weightSupported;
    }
}

/** Parse from a DataView into {@link BodyCompositionFeature}. */
export function bodyCompositionFeatureFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): BodyCompositionFeature {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const bodyCompositionFeature = $dvr.uint32();
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const timeStampSupported = bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0000_0000_0001;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const multipleUsersSupported = (bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0000_0000_0010) >> 1;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const basalMetabolismSupported = (bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0000_0000_0100) >> 2;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const musclePercentageSupported = (bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0000_0000_1000) >> 3;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const muscleMassSupported = (bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0000_0001_0000) >> 4;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const fatFreeMassSupported = (bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0000_0010_0000) >> 5;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const softLeanMassSupported = (bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0000_0100_0000) >> 6;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const bodyWaterMassSupported = (bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0000_1000_0000) >> 7;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const impedanceSupported = (bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0001_0000_0000) >> 8;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const weightSupported = (bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0010_0000_0000) >> 9;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const heightSupported = (bodyCompositionFeature & 0b0000_0000_0000_0000_0000_0100_0000_0000) >> 10;
    /**
     * | value | description                       |
     * | ----- | --------------------------------- |
     * | 0     | Not Specified                     |
     * | 1     | Resolution of 0.5 kg or 1 lb      |
     * | 2     | Resolution of 0.2 kg or 0.5 lb    |
     * | 3     | Resolution of 0.1 kg or 0.2 lb    |
     * | 4     | Resolution of 0.05 kg or 0.1 lb   |
     * | 5     | Resolution of 0.02 kg or 0.05 lb  |
     * | 6     | Resolution of 0.01 kg or 0.02 lb  |
     * | 7     | Resolution of 0.005 kg or 0.01 lb |
     */
    const massMeasurementResolution = (bodyCompositionFeature & 0b0000_0000_0000_0000_0111_1000_0000_0000) >> 11;
    /**
     * | value | description                           |
     * | ----- | ------------------------------------- |
     * | 0     | Not Specified                         |
     * | 1     | Resolution of 0.01 meter or 1 inch    |
     * | 2     | Resolution of 0.005 meter or 0.5 inch |
     * | 3     | Resolution of 0.001 meter or 0.1 inch |
     */
    const heightMeasurementResolution = (bodyCompositionFeature & 0b0000_0000_0000_0011_1000_0000_0000_0000) >> 15;
    return { basalMetabolismSupported, bodyCompositionFeature, bodyWaterMassSupported, fatFreeMassSupported, heightMeasurementResolution, heightSupported, impedanceSupported, massMeasurementResolution, multipleUsersSupported, muscleMassSupported, musclePercentageSupported, softLeanMassSupported, timeStampSupported, weightSupported };
}
