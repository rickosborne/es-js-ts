import { type DataViewReader, dataViewReader } from "./data-view-reader.js";
import { type DateTime, DateTimeImpl } from "./date-time.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.object_first_created.xml
export interface ObjectFirstCreated {
    objectFirstCreated: DateTime;
}

/**
 * The fields in the above table, reading from top to bottom, are shown in the order of LSO to MSO, where LSO = Least Significant Octet and MSO = Most Significant Octet. Data Type: Same format as the Date Time characteristic
 * @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.object_first_created.xml | Object First Created}
 */
export class ObjectFirstCreatedImpl implements ObjectFirstCreated {
    public static readonly UUID_PREFIX = 0x2ac1;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.object_first_created";
    public static readonly NAME = "Object First-Created";

    /** Parse from a DataView into {@link ObjectFirstCreated}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): ObjectFirstCreatedImpl {
        return new ObjectFirstCreatedImpl(objectFirstCreatedFromDataView(dataView, indexStart));
    }

    public readonly objectFirstCreated: DateTime;

    public constructor(objectFirstCreated: ObjectFirstCreated) {
        this.objectFirstCreated = objectFirstCreated.objectFirstCreated;
    }
}

/** Parse from a DataView into {@link ObjectFirstCreated}. */
export function objectFirstCreatedFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): ObjectFirstCreated {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const objectFirstCreated = DateTimeImpl.fromDataView($dvr);
    return { objectFirstCreated };
}
