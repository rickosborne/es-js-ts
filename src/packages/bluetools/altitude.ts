import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.altitude.xml
/** <p>The Altitude characteristic describes the altitude of the device.</p> */
export interface Altitude {
    /** <p>Format: `uint16`</p> */
    altitude: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.altitude.xml | Altitude} */
export class AltitudeImpl implements Altitude {
    public static readonly UUID_PREFIX = 0x2ab3;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.altitude";
    public static readonly NAME = "Altitude";

    /** Parse from a DataView into {@link Altitude}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): AltitudeImpl {
        return new AltitudeImpl(altitudeFromDataView(dataView, indexStart));
    }

    public readonly altitude: number;

    public constructor(altitude: Altitude) {
        this.altitude = altitude.altitude;
    }
}

/** Parse from a DataView into {@link Altitude}. */
export function altitudeFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): Altitude {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const altitude = $dvr.uint16();
    return { altitude };
}
