import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.protocol_mode.xml
/** <p>The Protocol Mode characteristic is used to expose the current protocol mode of the HID Service with which it is associated, or to set the desired protocol mode of the HID Service.</p> */
export interface ProtocolMode {
    /**
     * <p>Format: `uint8`</p>
     * | Key | Description          |
     * | --- | -------------------- |
     * | 0   | Boot Protocol Mode   |
     * | 1   | Report Protocol Mode |
     *
     * <p>Reserved for future use: 2 to 255</p>
     */
    protocolModeValue: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.protocol_mode.xml | Protocol Mode} */
export class ProtocolModeImpl implements ProtocolMode {
    public static readonly UUID_PREFIX = 0x2a4e;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.protocol_mode";
    public static readonly NAME = "Protocol Mode";

    /** Parse from a DataView into {@link ProtocolMode}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): ProtocolModeImpl {
        return new ProtocolModeImpl(protocolModeFromDataView(dataView, indexStart));
    }

    public readonly protocolModeValue: number;

    public constructor(protocolMode: ProtocolMode) {
        this.protocolModeValue = protocolMode.protocolModeValue;
    }
}

/** Parse from a DataView into {@link ProtocolMode}. */
export function protocolModeFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): ProtocolMode {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    /** */
    /**
     * | value | description          |
     * | ----- | -------------------- |
     * | 0     | Boot Protocol Mode   |
     * | 1     | Report Protocol Mode |
     */
    const protocolModeValue = $dvr.uint8();
    return { protocolModeValue };
}
