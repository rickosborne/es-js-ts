import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.maximum_recommended_heart_rate.xml
/** <p>Maximum recommended heart rate is a threshold that may be set to limit exertion. The maximum recommended heart rate is smaller or equal to the maximal heart rate a user can reach.</p> */
export interface MaximumRecommendedHeartRate {
    /**
     * <p>Format: `uint8`</p>
     * <p>Unit: `org.bluetooth.unit.period.beats_per_minute`</p>
     * <p>The Unit is beats per minute with a resolution of 1</p>
     */
    maximumRecommendedHeartRate: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.maximum_recommended_heart_rate.xml | Maximum Recommended Heart Rate} */
export class MaximumRecommendedHeartRateImpl implements MaximumRecommendedHeartRate {
    public static readonly UUID_PREFIX = 0x2a91;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.maximum_recommended_heart_rate";
    public static readonly NAME = "Maximum Recommended Heart Rate";

    /** Parse from a DataView into {@link MaximumRecommendedHeartRate}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): MaximumRecommendedHeartRateImpl {
        return new MaximumRecommendedHeartRateImpl(maximumRecommendedHeartRateFromDataView(dataView, indexStart));
    }

    public readonly maximumRecommendedHeartRate: number;

    public constructor(maximumRecommendedHeartRate: MaximumRecommendedHeartRate) {
        this.maximumRecommendedHeartRate = maximumRecommendedHeartRate.maximumRecommendedHeartRate;
    }
}

/** Parse from a DataView into {@link MaximumRecommendedHeartRate}. */
export function maximumRecommendedHeartRateFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): MaximumRecommendedHeartRate {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const maximumRecommendedHeartRate = $dvr.uint8();
    return { maximumRecommendedHeartRate };
}
