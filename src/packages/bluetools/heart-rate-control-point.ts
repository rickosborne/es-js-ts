import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.heart_rate_control_point.xml
export interface HeartRateControlPoint {
    /**
     * <p>Format: `8bit`</p>
     * | Key | Description                                                                                                            |
     * | --- | ---------------------------------------------------------------------------------------------------------------------- |
     * | 1   | Reset Energy Expended: resets the value of the Energy Expended field in the Heart Rate Measurement characteristic to 0 |
     *
     * <p>Reserved: 0</p>
     * <p>Reserved for future use: 2 to 255</p>
     */
    heartRateControlPoint: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.heart_rate_control_point.xml | Heart Rate Control Point} */
export class HeartRateControlPointImpl implements HeartRateControlPoint {
    public static readonly UUID_PREFIX = 0x2a39;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.heart_rate_control_point";
    public static readonly NAME = "Heart Rate Control Point";

    /** Parse from a DataView into {@link HeartRateControlPoint}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): HeartRateControlPointImpl {
        return new HeartRateControlPointImpl(heartRateControlPointFromDataView(dataView, indexStart));
    }

    public readonly heartRateControlPoint: number;

    public constructor(heartRateControlPoint: HeartRateControlPoint) {
        this.heartRateControlPoint = heartRateControlPoint.heartRateControlPoint;
    }
}

/** Parse from a DataView into {@link HeartRateControlPoint}. */
export function heartRateControlPointFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): HeartRateControlPoint {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    /** */
    /**
     * | value | description                                                                                                            |
     * | ----- | ---------------------------------------------------------------------------------------------------------------------- |
     * | 1     | Reset Energy Expended: resets the value of the Energy Expended field in the Heart Rate Measurement characteristic to 0 |
     */
    const heartRateControlPoint = $dvr.uint8();
    return { heartRateControlPoint };
}
