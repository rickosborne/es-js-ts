import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.measurement_interval.xml
/**
 * <p>The Measurement Interval characteristic defines the time between measurements.</p>
 * <p>This characteristic is capable of representing values from 1 second to 65535 seconds which is equal to 18 hours, 12 minutes and 15 seconds.</p>
 */
export interface MeasurementInterval {
    /**
     * <p>Format: `uint16`</p>
     * <p>Unit: `org.bluetooth.unit.time.second`</p>
     * <p>Minimum: 1</p>
     * <p>Maximum: 65535</p>
     */
    measurementInterval: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.measurement_interval.xml | Measurement Interval} */
export class MeasurementIntervalImpl implements MeasurementInterval {
    public static readonly UUID_PREFIX = 0x2a21;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.measurement_interval";
    public static readonly NAME = "Measurement Interval";

    /** Parse from a DataView into {@link MeasurementInterval}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): MeasurementIntervalImpl {
        return new MeasurementIntervalImpl(measurementIntervalFromDataView(dataView, indexStart));
    }

    public readonly measurementInterval: number;

    public constructor(measurementInterval: MeasurementInterval) {
        this.measurementInterval = measurementInterval.measurementInterval;
    }
}

/** Parse from a DataView into {@link MeasurementInterval}. */
export function measurementIntervalFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): MeasurementInterval {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const measurementInterval = $dvr.uint16();
    return { measurementInterval };
}
