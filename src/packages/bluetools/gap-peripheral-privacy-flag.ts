import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.gap.peripheral_privacy_flag.xml
export interface GapPeripheralPrivacyFlag {
    /**
     * <p>Format: `boolean`</p>
     * | Key | Description                        |
     * | --- | ---------------------------------- |
     * | 0   | privacy is disabled in this device |
     * | 1   | privacy is enabled in this device  |
     *
     */
    flag: boolean;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.gap.peripheral_privacy_flag.xml | Gap Peripheral Privacy Flag} */
export class GapPeripheralPrivacyFlagImpl implements GapPeripheralPrivacyFlag {
    public static readonly UUID_PREFIX = 0x2a02;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.gap.peripheral_privacy_flag";
    public static readonly NAME = "Peripheral Privacy Flag";

    /** Parse from a DataView into {@link GapPeripheralPrivacyFlag}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): GapPeripheralPrivacyFlagImpl {
        return new GapPeripheralPrivacyFlagImpl(gapPeripheralPrivacyFlagFromDataView(dataView, indexStart));
    }

    public readonly flag: boolean;

    public constructor(gapPeripheralPrivacyFlag: GapPeripheralPrivacyFlag) {
        this.flag = gapPeripheralPrivacyFlag.flag;
    }
}

/** Parse from a DataView into {@link GapPeripheralPrivacyFlag}. */
export function gapPeripheralPrivacyFlagFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): GapPeripheralPrivacyFlag {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    /** */
    /**
     * | value | description                        |
     * | ----- | ---------------------------------- |
     * | 0     | privacy is disabled in this device |
     * | 1     | privacy is enabled in this device  |
     */
    const flag = $dvr.bool();
    return { flag };
}
