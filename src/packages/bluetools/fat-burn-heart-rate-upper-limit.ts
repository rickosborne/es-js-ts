import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.fat_burn_heart_rate_upper_limit.xml
/** <p>Upper limit of the heart rate where the user maximizes the fat burn while exersizing</p> */
export interface FatBurnHeartRateUpperLimit {
    /**
     * <p>Format: `uint8`</p>
     * <p>Unit: `org.bluetooth.unit.period.beats_per_minute`</p>
     * <p>Unit is in beats per minute with a resolution of 1</p>
     */
    fatBurnHeartRateUpperLimit: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.fat_burn_heart_rate_upper_limit.xml | Fat Burn Heart Rate Upper Limit} */
export class FatBurnHeartRateUpperLimitImpl implements FatBurnHeartRateUpperLimit {
    public static readonly UUID_PREFIX = 0x2a89;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.fat_burn_heart_rate_upper_limit";
    public static readonly NAME = "Fat Burn Heart Rate Upper Limit";

    /** Parse from a DataView into {@link FatBurnHeartRateUpperLimit}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): FatBurnHeartRateUpperLimitImpl {
        return new FatBurnHeartRateUpperLimitImpl(fatBurnHeartRateUpperLimitFromDataView(dataView, indexStart));
    }

    public readonly fatBurnHeartRateUpperLimit: number;

    public constructor(fatBurnHeartRateUpperLimit: FatBurnHeartRateUpperLimit) {
        this.fatBurnHeartRateUpperLimit = fatBurnHeartRateUpperLimit.fatBurnHeartRateUpperLimit;
    }
}

/** Parse from a DataView into {@link FatBurnHeartRateUpperLimit}. */
export function fatBurnHeartRateUpperLimitFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): FatBurnHeartRateUpperLimit {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const fatBurnHeartRateUpperLimit = $dvr.uint8();
    return { fatBurnHeartRateUpperLimit };
}
