import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.alert_status.xml
/**
 * <p>Bit 0, meaning ?Ringer State?</p>
 * <p>Bit 1, meaning ?Vibrator State?</p>
 * <p>Bit 2, meaning "Display Alert Status"</p>
 * <p>Bit 0, 0 meaning ?Ringer State? not active, 1 meaning ?Ringer State? active</p>
 * <p>Bit 1, 0 meaning ?Vibrator State? not active, 1 meaning ?Vibrator State? active</p>
 * <p>Bit 2, 0 meaning ?Display Alert State? not active, 1 meaning ?Display Alert State? active</p>
 */
export interface AlertStatus {
    /**
     * <p>Format: `uint8`</p>
     * <p>Minimum: 0</p>
     * <p>Maximum: 2</p>
     *
     * Bit field:
     *
     * | index | size | name                    |
     * | ----- | ---- | ----------------------- |
     * | 0     | 1    | Ringer State            |
     * | 1     | 1    | Vibrate State           |
     * | 2     | 1    | Display Alert Status    |
     * | 3     | 5    | Reserved for future use |
     *
     */
    alertStatus: number;
    /**
     * | value | description                       |
     * | ----- | --------------------------------- |
     * | 0     | Display Alert Status not active   |
     * | 1     | Display Alert Status State active |
     */
    displayAlertStatus: number;
    /**
     * | value | description             |
     * | ----- | ----------------------- |
     * | 0     | Ringer State not active |
     * | 1     | Ringer State active     |
     */
    ringerState: number;
    /**
     * | value | description              |
     * | ----- | ------------------------ |
     * | 0     | Vibrate State not active |
     * | 1     | Vibrate State active     |
     */
    vibrateState: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.alert_status.xml | Alert Status} */
export class AlertStatusImpl implements AlertStatus {
    public static readonly UUID_PREFIX = 0x2a3f;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.alert_status";
    public static readonly NAME = "Alert Status";

    /** Parse from a DataView into {@link AlertStatus}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): AlertStatusImpl {
        return new AlertStatusImpl(alertStatusFromDataView(dataView, indexStart));
    }

    public readonly alertStatus: number;
    public readonly displayAlertStatus: number;
    public readonly ringerState: number;
    public readonly vibrateState: number;

    public constructor(alertStatus: AlertStatus) {
        this.alertStatus = alertStatus.alertStatus;
        this.displayAlertStatus = alertStatus.displayAlertStatus;
        this.ringerState = alertStatus.ringerState;
        this.vibrateState = alertStatus.vibrateState;
    }
}

/** Parse from a DataView into {@link AlertStatus}. */
export function alertStatusFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): AlertStatus {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const alertStatus = $dvr.uint8();
    /**
     * | value | description             |
     * | ----- | ----------------------- |
     * | 0     | Ringer State not active |
     * | 1     | Ringer State active     |
     */
    const ringerState = alertStatus & 0b0000_0001;
    /**
     * | value | description              |
     * | ----- | ------------------------ |
     * | 0     | Vibrate State not active |
     * | 1     | Vibrate State active     |
     */
    const vibrateState = (alertStatus & 0b0000_0010) >> 1;
    /**
     * | value | description                       |
     * | ----- | --------------------------------- |
     * | 0     | Display Alert Status not active   |
     * | 1     | Display Alert Status State active |
     */
    const displayAlertStatus = (alertStatus & 0b0000_0100) >> 2;
    return { alertStatus, displayAlertStatus, ringerState, vibrateState };
}
