import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.first_name.xml
/** <p>First name of the user. See Note below.</p> */
export interface FirstName {
    /**
     * <p>Format: `utf8s`</p>
     * <p>Unit: `org.bluetooth.unit.unitless`</p>
     */
    firstName: string;
}

/**
 * The length of the utf8s-based UDS Characteristics is variable and may exceed the default ATT_MTU defined in the Core Specification.
 * @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.first_name.xml | First Name}
 */
export class FirstNameImpl implements FirstName {
    public static readonly UUID_PREFIX = 0x2a8a;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.first_name";
    public static readonly NAME = "First Name";

    /** Parse from a DataView into {@link FirstName}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): FirstNameImpl {
        return new FirstNameImpl(firstNameFromDataView(dataView, indexStart));
    }

    public readonly firstName: string;

    public constructor(firstName: FirstName) {
        this.firstName = firstName.firstName;
    }
}

/** Parse from a DataView into {@link FirstName}. */
export function firstNameFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): FirstName {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const firstName = $dvr.utf8s();
    return { firstName };
}
