import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.floor_number.xml
/** <p>The Floor Number characteristic describes in which floor the device is installed.</p> */
export interface FloorNumber {
    /** <p>Format: `uint8`</p> */
    floorNumber: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.floor_number.xml | Floor Number} */
export class FloorNumberImpl implements FloorNumber {
    public static readonly UUID_PREFIX = 0x2ab2;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.floor_number";
    public static readonly NAME = "Floor Number";

    /** Parse from a DataView into {@link FloorNumber}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): FloorNumberImpl {
        return new FloorNumberImpl(floorNumberFromDataView(dataView, indexStart));
    }

    public readonly floorNumber: number;

    public constructor(floorNumber: FloorNumber) {
        this.floorNumber = floorNumber.floorNumber;
    }
}

/** Parse from a DataView into {@link FloorNumber}. */
export function floorNumberFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): FloorNumber {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const floorNumber = $dvr.uint8();
    return { floorNumber };
}
