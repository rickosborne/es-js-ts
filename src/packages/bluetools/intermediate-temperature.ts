import { type DataViewReader, dataViewReader } from "./data-view-reader.js";
import { type TemperatureMeasurement, TemperatureMeasurementImpl } from "./temperature-measurement.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.intermediate_temperature.xml
/** <p>The Intermediate Temperature characteristic has the same format as the Temperature Measurement characteristic. However, due to a different context, the Value field is referred to as the Intermediate Temperature Value field.</p> */
export interface IntermediateTemperature {
    intermediateTemperature: TemperatureMeasurement;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.intermediate_temperature.xml | Intermediate Temperature} */
export class IntermediateTemperatureImpl implements IntermediateTemperature {
    public static readonly UUID_PREFIX = 0x2a1e;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.intermediate_temperature";
    public static readonly NAME = "Intermediate Temperature";

    /** Parse from a DataView into {@link IntermediateTemperature}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): IntermediateTemperatureImpl {
        return new IntermediateTemperatureImpl(intermediateTemperatureFromDataView(dataView, indexStart));
    }

    public readonly intermediateTemperature: TemperatureMeasurement;

    public constructor(intermediateTemperature: IntermediateTemperature) {
        this.intermediateTemperature = intermediateTemperature.intermediateTemperature;
    }
}

/** Parse from a DataView into {@link IntermediateTemperature}. */
export function intermediateTemperatureFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): IntermediateTemperature {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const intermediateTemperature = TemperatureMeasurementImpl.fromDataView($dvr);
    return { intermediateTemperature };
}
