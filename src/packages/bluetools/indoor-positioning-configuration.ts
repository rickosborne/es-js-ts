import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.indoor_positioning_configuration.xml
/** <p>The Indoor Positioning Configuration describes the set of characteristic values included in the Indoor Positioning Service AD type.</p> */
export interface IndoorPositioningConfiguration {
    /**
     * | value | description             |
     * | ----- | ----------------------- |
     * | 0     | WGS84 coordinate system |
     * | 1     | Local coordinate system |
     */
    coordinateSystemUsedInAdvertisingPackets: number;
    /**
     * <p>Format: `uint8`</p>
     *
     * Bit field:
     *
     * | index | size | name                                              |
     * | ----- | ---- | ------------------------------------------------- |
     * | 0     | 1    | Presence of coordinates in advertising packets    |
     * | 1     | 1    | Coordinate system used in advertising packets     |
     * | 2     | 1    | Presence of Tx Power field in advertising packets |
     * | 3     | 1    | Presence of Altitude field in advertising packets |
     * | 4     | 1    | Presence of Floor Number in advertising packets   |
     * | 5     | 1    | Location Name available in the GATT database      |
     * | 6     | 2    | Reserved for future use                           |
     *
     */
    indoorPositioningConfiguration: number;
    /**
     * | value | description                  |
     * | ----- | ---------------------------- |
     * | 0     | Location Name is not present |
     * | 1     | Location Name is present     |
     */
    locationNameAvailableInTheGATTDatabase: number;
    /**
     * | value | description             |
     * | ----- | ----------------------- |
     * | 0     | Altitude is not present |
     * | 1     | Altitude is present     |
     */
    presenceOfAltitudeFieldInAdvertisingPackets: number;
    /**
     * | value | description                 |
     * | ----- | --------------------------- |
     * | 0     | Coordinates are not present |
     * | 1     | Coordinates are present     |
     */
    presenceOfCoordinatesInAdvertisingPackets: number;
    /**
     * | value | description                 |
     * | ----- | --------------------------- |
     * | 0     | Floor Number is not present |
     * | 1     | Floor Number is present     |
     */
    presenceOfFloorNumberInAdvertisingPackets: number;
    /**
     * | value | description             |
     * | ----- | ----------------------- |
     * | 0     | Tx Power is not present |
     * | 1     | Tx Power is not present |
     */
    presenceOfTxPowerFieldInAdvertisingPackets: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.indoor_positioning_configuration.xml | Indoor Positioning Configuration} */
export class IndoorPositioningConfigurationImpl implements IndoorPositioningConfiguration {
    public static readonly UUID_PREFIX = 0x2aad;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.indoor_positioning_configuration";
    public static readonly NAME = "Indoor Positioning Configuration";

    /** Parse from a DataView into {@link IndoorPositioningConfiguration}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): IndoorPositioningConfigurationImpl {
        return new IndoorPositioningConfigurationImpl(indoorPositioningConfigurationFromDataView(dataView, indexStart));
    }

    public readonly coordinateSystemUsedInAdvertisingPackets: number;
    public readonly indoorPositioningConfiguration: number;
    public readonly locationNameAvailableInTheGATTDatabase: number;
    public readonly presenceOfAltitudeFieldInAdvertisingPackets: number;
    public readonly presenceOfCoordinatesInAdvertisingPackets: number;
    public readonly presenceOfFloorNumberInAdvertisingPackets: number;
    public readonly presenceOfTxPowerFieldInAdvertisingPackets: number;

    public constructor(indoorPositioningConfiguration: IndoorPositioningConfiguration) {
        this.coordinateSystemUsedInAdvertisingPackets = indoorPositioningConfiguration.coordinateSystemUsedInAdvertisingPackets;
        this.indoorPositioningConfiguration = indoorPositioningConfiguration.indoorPositioningConfiguration;
        this.locationNameAvailableInTheGATTDatabase = indoorPositioningConfiguration.locationNameAvailableInTheGATTDatabase;
        this.presenceOfAltitudeFieldInAdvertisingPackets = indoorPositioningConfiguration.presenceOfAltitudeFieldInAdvertisingPackets;
        this.presenceOfCoordinatesInAdvertisingPackets = indoorPositioningConfiguration.presenceOfCoordinatesInAdvertisingPackets;
        this.presenceOfFloorNumberInAdvertisingPackets = indoorPositioningConfiguration.presenceOfFloorNumberInAdvertisingPackets;
        this.presenceOfTxPowerFieldInAdvertisingPackets = indoorPositioningConfiguration.presenceOfTxPowerFieldInAdvertisingPackets;
    }
}

/** Parse from a DataView into {@link IndoorPositioningConfiguration}. */
export function indoorPositioningConfigurationFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): IndoorPositioningConfiguration {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const indoorPositioningConfiguration = $dvr.uint8();
    /**
     * | value | description                 |
     * | ----- | --------------------------- |
     * | 0     | Coordinates are not present |
     * | 1     | Coordinates are present     |
     */
    const presenceOfCoordinatesInAdvertisingPackets = indoorPositioningConfiguration & 0b0000_0001;
    /**
     * | value | description             |
     * | ----- | ----------------------- |
     * | 0     | WGS84 coordinate system |
     * | 1     | Local coordinate system |
     */
    const coordinateSystemUsedInAdvertisingPackets = (indoorPositioningConfiguration & 0b0000_0010) >> 1;
    /**
     * | value | description             |
     * | ----- | ----------------------- |
     * | 0     | Tx Power is not present |
     * | 1     | Tx Power is not present |
     */
    const presenceOfTxPowerFieldInAdvertisingPackets = (indoorPositioningConfiguration & 0b0000_0100) >> 2;
    /**
     * | value | description             |
     * | ----- | ----------------------- |
     * | 0     | Altitude is not present |
     * | 1     | Altitude is present     |
     */
    const presenceOfAltitudeFieldInAdvertisingPackets = (indoorPositioningConfiguration & 0b0000_1000) >> 3;
    /**
     * | value | description                 |
     * | ----- | --------------------------- |
     * | 0     | Floor Number is not present |
     * | 1     | Floor Number is present     |
     */
    const presenceOfFloorNumberInAdvertisingPackets = (indoorPositioningConfiguration & 0b0001_0000) >> 4;
    /**
     * | value | description                  |
     * | ----- | ---------------------------- |
     * | 0     | Location Name is not present |
     * | 1     | Location Name is present     |
     */
    const locationNameAvailableInTheGATTDatabase = (indoorPositioningConfiguration & 0b0010_0000) >> 5;
    return { coordinateSystemUsedInAdvertisingPackets, indoorPositioningConfiguration, locationNameAvailableInTheGATTDatabase, presenceOfAltitudeFieldInAdvertisingPackets, presenceOfCoordinatesInAdvertisingPackets, presenceOfFloorNumberInAdvertisingPackets, presenceOfTxPowerFieldInAdvertisingPackets };
}
