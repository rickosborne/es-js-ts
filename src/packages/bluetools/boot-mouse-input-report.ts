import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.boot_mouse_input_report.xml
/** <p>The Boot Mouse Input Report characteristic is used to transfer fixed format and length Input Report data between a HID Host operating in Boot Protocol Mode and a HID Service corresponding to a boot mouse.</p> */
export interface BootMouseInputReport {
    /** <p>Format: `uint8`</p> */
    bootMouseInputReportValue: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.boot_mouse_input_report.xml | Boot Mouse Input Report} */
export class BootMouseInputReportImpl implements BootMouseInputReport {
    public static readonly UUID_PREFIX = 0x2a33;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.boot_mouse_input_report";
    public static readonly NAME = "Boot Mouse Input Report";

    /** Parse from a DataView into {@link BootMouseInputReport}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): BootMouseInputReportImpl {
        return new BootMouseInputReportImpl(bootMouseInputReportFromDataView(dataView, indexStart));
    }

    public readonly bootMouseInputReportValue: number;

    public constructor(bootMouseInputReport: BootMouseInputReport) {
        this.bootMouseInputReportValue = bootMouseInputReport.bootMouseInputReportValue;
    }
}

/** Parse from a DataView into {@link BootMouseInputReport}. */
export function bootMouseInputReportFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): BootMouseInputReport {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const bootMouseInputReportValue = $dvr.uint8();
    return { bootMouseInputReportValue };
}
