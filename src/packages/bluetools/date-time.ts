import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.date_time.xml
/**
 * <p>The Date Time characteristic is used to represent time.</p>
 * <p>The Date Time characteristic contains fields for year, month, day, hours, minutes and seconds. Calendar days in Date Time are represented using Gregorian calendar. Hours in Date Time are represented in the 24h system.</p>
 */
export interface DateTime {
    /**
     * <p>Format: `uint8`</p>
     * <p>Unit: `org.bluetooth.unit.time.day`</p>
     * <p>Day of the month as defined by the Gregorian calendar.</p>
     * <p>Minimum: 1</p>
     * <p>Maximum: 31</p>
     */
    day: number;
    /**
     * <p>Format: `uint8`</p>
     * <p>Unit: `org.bluetooth.unit.time.hour`</p>
     * <p>Number of hours past midnight.</p>
     * <p>Minimum: 0</p>
     * <p>Maximum: 23</p>
     */
    hours: number;
    /**
     * <p>Format: `uint8`</p>
     * <p>Unit: `org.bluetooth.unit.time.minute`</p>
     * <p>Number of minutes since the start of the hour.</p>
     * <p>Minimum: 0</p>
     * <p>Maximum: 59</p>
     */
    minutes: number;
    /**
     * <p>Format: `uint8`</p>
     * <p>Unit: `org.bluetooth.unit.time.month`</p>
     * <p>Month of the year as defined by the Gregorian calendar.</p>
     * <p>Minimum: 0</p>
     * <p>Maximum: 12</p>
     * | Key | Description        |
     * | --- | ------------------ |
     * | 0   | Month is not known |
     * | 1   | January            |
     * | 2   | February           |
     * | 3   | March              |
     * | 4   | April              |
     * | 5   | May                |
     * | 6   | June               |
     * | 7   | July               |
     * | 8   | August             |
     * | 9   | September          |
     * | 10  | October            |
     * | 11  | November           |
     * | 12  | December           |
     *
     */
    month: number;
    /**
     * <p>Format: `uint8`</p>
     * <p>Unit: `org.bluetooth.unit.time.second`</p>
     * <p>Number of seconds since the start of the minute.</p>
     * <p>Minimum: 0</p>
     * <p>Maximum: 59</p>
     */
    seconds: number;
    /**
     * <p>Format: `uint16`</p>
     * <p>Unit: `org.bluetooth.unit.time.year`</p>
     * <p>Year as defined by the Gregorian calendar.</p>
     * <p>Minimum: 1582</p>
     * <p>Maximum: 9999</p>
     */
    year: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.date_time.xml | Date Time} */
export class DateTimeImpl implements DateTime {
    public static readonly UUID_PREFIX = 0x2a08;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.date_time";
    public static readonly NAME = "Date Time";

    /** Parse from a DataView into {@link DateTime}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): DateTimeImpl {
        return new DateTimeImpl(dateTimeFromDataView(dataView, indexStart));
    }

    public readonly day: number;
    public readonly hours: number;
    public readonly minutes: number;
    public readonly month: number;
    public readonly seconds: number;
    public readonly year: number;

    public constructor(dateTime: DateTime) {
        this.day = dateTime.day;
        this.hours = dateTime.hours;
        this.minutes = dateTime.minutes;
        this.month = dateTime.month;
        this.seconds = dateTime.seconds;
        this.year = dateTime.year;
    }
}

/** Parse from a DataView into {@link DateTime}. */
export function dateTimeFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): DateTime {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const year = $dvr.uint16();
    /** */
    /**
     * | value | description        |
     * | ----- | ------------------ |
     * | 0     | Month is not known |
     * | 1     | January            |
     * | 2     | February           |
     * | 3     | March              |
     * | 4     | April              |
     * | 5     | May                |
     * | 6     | June               |
     * | 7     | July               |
     * | 8     | August             |
     * | 9     | September          |
     * | 10    | October            |
     * | 11    | November           |
     * | 12    | December           |
     */
    const month = $dvr.uint8();
    const day = $dvr.uint8();
    const hours = $dvr.uint8();
    const minutes = $dvr.uint8();
    const seconds = $dvr.uint8();
    return { day, hours, minutes, month, seconds, year };
}
