import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.latitude.xml
/** <p>The Latitude characteristic describes the WGS84 North coordinate of the device.</p> */
export interface Latitude {
    /** <p>Format: `sint32`</p> */
    latitude: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.latitude.xml | Latitude} */
export class LatitudeImpl implements Latitude {
    public static readonly UUID_PREFIX = 0x2aae;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.latitude";
    public static readonly NAME = "Latitude";

    /** Parse from a DataView into {@link Latitude}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): LatitudeImpl {
        return new LatitudeImpl(latitudeFromDataView(dataView, indexStart));
    }

    public readonly latitude: number;

    public constructor(latitude: Latitude) {
        this.latitude = latitude.latitude;
    }
}

/** Parse from a DataView into {@link Latitude}. */
export function latitudeFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): Latitude {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const latitude = $dvr.int32();
    return { latitude };
}
