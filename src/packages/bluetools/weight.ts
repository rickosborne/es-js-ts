import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.weight.xml
/** <p>Weight of the User</p> */
export interface Weight {
    /**
     * <p>Format: `uint16`</p>
     * <p>Unit: `org.bluetooth.unit.mass.kilogram`</p>
     * <p>Unit is in kilograms with a resolution of 0.005.</p>
     */
    weight: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.weight.xml | Weight} */
export class WeightImpl implements Weight {
    public static readonly UUID_PREFIX = 0x2a98;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.weight";
    public static readonly NAME = "Weight";

    /** Parse from a DataView into {@link Weight}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): WeightImpl {
        return new WeightImpl(weightFromDataView(dataView, indexStart));
    }

    public readonly weight: number;

    public constructor(weight: Weight) {
        this.weight = weight.weight;
    }
}

/** Parse from a DataView into {@link Weight}. */
export function weightFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): Weight {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const weight = $dvr.uint16();
    return { weight };
}
