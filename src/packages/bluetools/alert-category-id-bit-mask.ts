import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.alert_category_id_bit_mask.xml
/**
 * <p>Categories of alerts/messages.</p>
 * <p>The value 0x03 is interpreted as ?Simple Alert and Email bits set?</p>
 * <p>The value of the characteristic is a bit mask implemented as an array of unsigned 8 bit integers. The Alert Category ID Bit Mask characteristic defines one bit for each predefined category ID.</p>
 */
export interface AlertCategoryIdBitMask {
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    call: number;
    /**
     * <p>Format: `uint8`</p>
     *
     * Bit field:
     *
     * | index | size | name         |
     * | ----- | ---- | ------------ |
     * | 0     | 1    | Simple Alert |
     * | 1     | 1    | Email        |
     * | 2     | 1    | News         |
     * | 3     | 1    | Call         |
     * | 4     | 1    | Missed Call  |
     * | 5     | 1    | SMS/MMS      |
     * | 6     | 1    | Voice Mail   |
     * | 7     | 1    | Schedule     |
     *
     */
    categoryIDBitMask0: number;
    /**
     * <p>Format: `uint8`</p>
     *
     * Bit field:
     *
     * | index | size | name                    |
     * | ----- | ---- | ----------------------- |
     * | 0     | 1    | High Prioritized Alert  |
     * | 1     | 1    | Instant Message         |
     * | 2     | 6    | Reserved for future use |
     *
     */
    categoryIDBitMask1?: number | undefined;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    email: number;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    highPrioritizedAlert: number;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    instantMessage: number;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    missedCall: number;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    news: number;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    schedule: number;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    simpleAlert: number;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    smsMMS: number;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    voiceMail: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.alert_category_id_bit_mask.xml | Alert Category Id Bit Mask} */
export class AlertCategoryIdBitMaskImpl implements AlertCategoryIdBitMask {
    public static readonly UUID_PREFIX = 0x2a42;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.alert_category_id_bit_mask";
    public static readonly NAME = "Alert Category ID Bit Mask";

    /** Parse from a DataView into {@link AlertCategoryIdBitMask}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): AlertCategoryIdBitMaskImpl {
        return new AlertCategoryIdBitMaskImpl(alertCategoryIdBitMaskFromDataView(dataView, indexStart));
    }

    public readonly call: number;
    public readonly categoryIDBitMask0: number;
    public readonly categoryIDBitMask1?: number | undefined;
    public readonly email: number;
    public readonly highPrioritizedAlert: number;
    public readonly instantMessage: number;
    public readonly missedCall: number;
    public readonly news: number;
    public readonly schedule: number;
    public readonly simpleAlert: number;
    public readonly smsMMS: number;
    public readonly voiceMail: number;

    public constructor(alertCategoryIdBitMask: AlertCategoryIdBitMask) {
        this.call = alertCategoryIdBitMask.call;
        this.categoryIDBitMask0 = alertCategoryIdBitMask.categoryIDBitMask0;
        this.categoryIDBitMask1 = alertCategoryIdBitMask.categoryIDBitMask1;
        this.email = alertCategoryIdBitMask.email;
        this.highPrioritizedAlert = alertCategoryIdBitMask.highPrioritizedAlert;
        this.instantMessage = alertCategoryIdBitMask.instantMessage;
        this.missedCall = alertCategoryIdBitMask.missedCall;
        this.news = alertCategoryIdBitMask.news;
        this.schedule = alertCategoryIdBitMask.schedule;
        this.simpleAlert = alertCategoryIdBitMask.simpleAlert;
        this.smsMMS = alertCategoryIdBitMask.smsMMS;
        this.voiceMail = alertCategoryIdBitMask.voiceMail;
    }
}

/** Parse from a DataView into {@link AlertCategoryIdBitMask}. */
export function alertCategoryIdBitMaskFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): AlertCategoryIdBitMask {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const categoryIDBitMask0 = $dvr.uint8();
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    const simpleAlert = categoryIDBitMask0 & 0b0000_0001;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    const email = (categoryIDBitMask0 & 0b0000_0010) >> 1;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    const news = (categoryIDBitMask0 & 0b0000_0100) >> 2;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    const call = (categoryIDBitMask0 & 0b0000_1000) >> 3;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    const missedCall = (categoryIDBitMask0 & 0b0001_0000) >> 4;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    const smsMMS = (categoryIDBitMask0 & 0b0010_0000) >> 5;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    const voiceMail = (categoryIDBitMask0 & 0b0100_0000) >> 6;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    const schedule = (categoryIDBitMask0 & 0b1000_0000) >> 7;
    const categoryIDBitMask1 = $dvr.uint8();
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    const highPrioritizedAlert = (categoryIDBitMask1 ?? 0) & 0b0000_0001;
    /**
     * | value | description   |
     * | ----- | ------------- |
     * | 0     | Not Supported |
     * | 1     | Supported     |
     */
    const instantMessage = ((categoryIDBitMask1 ?? 0) & 0b0000_0010) >> 1;
    return { call, categoryIDBitMask0, categoryIDBitMask1, email, highPrioritizedAlert, instantMessage, missedCall, news, schedule, simpleAlert, smsMMS, voiceMail };
}
