import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.http_status_code.xml
/** <p>The HTTP Status Code characteristic contains the Status-Code from the Status-Line of the first line of the HTTP Response Message, followed by one octet indicating the Data Status Bit Field indicating the status of the data received.</p> */
export interface HttpStatusCode {
    /**
     * | value | description                                                                                                                       |
     * | ----- | --------------------------------------------------------------------------------------------------------------------------------- |
     * | 0     | The entity-body field was not received in the HTTP response or stored in the HTTP Entity Body characteristic.                     |
     * | 1     | The entity-body field was received in the HTTP response and stored in the HTTP Entity Body characteristic for the Client to read. |
     */
    bodyReceived: number;
    /**
     * | value | description                                                                                                                |
     * | ----- | -------------------------------------------------------------------------------------------------------------------------- |
     * | 0     | Any received entity-body field did not exceed 512 octets in length.                                                        |
     * | 1     | The entity-body field exceeded 512 octets in length and the first 512 octets were saved in the HTTP Headers characteristic |
     */
    bodyTruncated: number;
    /**
     * <p>Format: `uint8`</p>
     *
     * Bit field:
     *
     * | index | size | name                    |
     * | ----- | ---- | ----------------------- |
     * | 0     | 1    | Headers Received        |
     * | 1     | 1    | Headers Truncated       |
     * | 2     | 1    | Body Received           |
     * | 3     | 1    | Body Truncated          |
     * | 4     | 4    | Reserved for future use |
     *
     */
    dataStatus: number;
    /**
     * | value | description                                                                                                                                           |
     * | ----- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |
     * | 0     | The response-header and entity-header fields were not received in the HTTP response or stored in the HTTP Headers characteristic.                     |
     * | 1     | The response-header and entity-header fields were received in the HTTP response and stored in the HTTP Headers characteristic for the Client to read. |
     */
    headersReceived: number;
    /**
     * | value | description                                                                                                                                        |
     * | ----- | -------------------------------------------------------------------------------------------------------------------------------------------------- |
     * | 0     | Any received response-header and entity-header fields did not exceed 512 octets in length.                                                         |
     * | 1     | The response-header and entity-header fields exceeded 512 octets in length and the first 512 octets were saved in the HTTP Headers characteristic. |
     */
    headersTruncated: number;
    /** <p>Format: `uint16`</p> */
    statusCode: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.http_status_code.xml | Http Status Code} */
export class HttpStatusCodeImpl implements HttpStatusCode {
    public static readonly UUID_PREFIX = 0x2ab8;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.http_status_code";
    public static readonly NAME = "HTTP Status Code";

    /** Parse from a DataView into {@link HttpStatusCode}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): HttpStatusCodeImpl {
        return new HttpStatusCodeImpl(httpStatusCodeFromDataView(dataView, indexStart));
    }

    public readonly bodyReceived: number;
    public readonly bodyTruncated: number;
    public readonly dataStatus: number;
    public readonly headersReceived: number;
    public readonly headersTruncated: number;
    public readonly statusCode: number;

    public constructor(httpStatusCode: HttpStatusCode) {
        this.bodyReceived = httpStatusCode.bodyReceived;
        this.bodyTruncated = httpStatusCode.bodyTruncated;
        this.dataStatus = httpStatusCode.dataStatus;
        this.headersReceived = httpStatusCode.headersReceived;
        this.headersTruncated = httpStatusCode.headersTruncated;
        this.statusCode = httpStatusCode.statusCode;
    }
}

/** Parse from a DataView into {@link HttpStatusCode}. */
export function httpStatusCodeFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): HttpStatusCode {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const statusCode = $dvr.uint16();
    const dataStatus = $dvr.uint8();
    /**
     * | value | description                                                                                                                                           |
     * | ----- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |
     * | 0     | The response-header and entity-header fields were not received in the HTTP response or stored in the HTTP Headers characteristic.                     |
     * | 1     | The response-header and entity-header fields were received in the HTTP response and stored in the HTTP Headers characteristic for the Client to read. |
     */
    const headersReceived = dataStatus & 0b0000_0001;
    /**
     * | value | description                                                                                                                                        |
     * | ----- | -------------------------------------------------------------------------------------------------------------------------------------------------- |
     * | 0     | Any received response-header and entity-header fields did not exceed 512 octets in length.                                                         |
     * | 1     | The response-header and entity-header fields exceeded 512 octets in length and the first 512 octets were saved in the HTTP Headers characteristic. |
     */
    const headersTruncated = (dataStatus & 0b0000_0010) >> 1;
    /**
     * | value | description                                                                                                                       |
     * | ----- | --------------------------------------------------------------------------------------------------------------------------------- |
     * | 0     | The entity-body field was not received in the HTTP response or stored in the HTTP Entity Body characteristic.                     |
     * | 1     | The entity-body field was received in the HTTP response and stored in the HTTP Entity Body characteristic for the Client to read. |
     */
    const bodyReceived = (dataStatus & 0b0000_0100) >> 2;
    /**
     * | value | description                                                                                                                |
     * | ----- | -------------------------------------------------------------------------------------------------------------------------- |
     * | 0     | Any received entity-body field did not exceed 512 octets in length.                                                        |
     * | 1     | The entity-body field exceeded 512 octets in length and the first 512 octets were saved in the HTTP Headers characteristic |
     */
    const bodyTruncated = (dataStatus & 0b0000_1000) >> 3;
    return { bodyReceived, bodyTruncated, dataStatus, headersReceived, headersTruncated, statusCode };
}
