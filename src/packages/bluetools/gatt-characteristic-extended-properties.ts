import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.descriptor.gatt.characteristic_extended_properties.xml
/**
 * <p>The Characteristic Extended Properties descriptor defines additional Characteristic Properties.</p>
 * <p>If the Characteristic Extended Properties bit of the Characteristic Properties is set, then this descriptor exists. The Characteristic Extended Properties descriptor is a bit field defining Reliable Write and Writeable Auxiliaries are enabled for the Characteristic. This descriptor is readable without authentication and authorization being required.</p>
 */
export interface GattCharacteristicExtendedProperties {
    /**
     * | value | description             |
     * | ----- | ----------------------- |
     * | 0     | Reliable Write disabled |
     * | 1     | Reliable Write enabled  |
     */
    bit0: number;
    /**
     * | value | description                   |
     * | ----- | ----------------------------- |
     * | 0     | Writable Auxiliaries disabled |
     * | 1     | Writable Auxiliaries enabled  |
     */
    bit1: number;
    /**
     * <p>Format: `16bit`</p>
     * <p>Minimum: 0</p>
     * <p>Maximum: 3</p>
     *
     * Bit field:
     *
     * | index | size | name                    |
     * | ----- | ---- | ----------------------- |
     * | 0     | 1    | bit0                    |
     * | 1     | 1    | bit1                    |
     * | 0     | 0    | Reserved for future use |
     *
     */
    properties: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.descriptor.gatt.characteristic_extended_properties.xml | Gatt Characteristic Extended Properties} */
export class GattCharacteristicExtendedPropertiesImpl implements GattCharacteristicExtendedProperties {
    public static readonly UUID_PREFIX = 0x2900;
    public static readonly TYPE_NAME = "org.bluetooth.descriptor.gatt.characteristic_extended_properties";
    public static readonly NAME = "Characteristic Extended Properties";

    /** Parse from a DataView into {@link GattCharacteristicExtendedProperties}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): GattCharacteristicExtendedPropertiesImpl {
        return new GattCharacteristicExtendedPropertiesImpl(gattCharacteristicExtendedPropertiesFromDataView(dataView, indexStart));
    }

    public readonly bit0: number;
    public readonly bit1: number;
    public readonly properties: number;

    public constructor(gattCharacteristicExtendedProperties: GattCharacteristicExtendedProperties) {
        this.bit0 = gattCharacteristicExtendedProperties.bit0;
        this.bit1 = gattCharacteristicExtendedProperties.bit1;
        this.properties = gattCharacteristicExtendedProperties.properties;
    }
}

/** Parse from a DataView into {@link GattCharacteristicExtendedProperties}. */
export function gattCharacteristicExtendedPropertiesFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): GattCharacteristicExtendedProperties {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const properties = $dvr.uint16();
    /**
     * | value | description             |
     * | ----- | ----------------------- |
     * | 0     | Reliable Write disabled |
     * | 1     | Reliable Write enabled  |
     */
    const bit0 = properties & 0b0000_0000_0000_0001;
    /**
     * | value | description                   |
     * | ----- | ----------------------------- |
     * | 0     | Writable Auxiliaries disabled |
     * | 1     | Writable Auxiliaries enabled  |
     */
    const bit1 = (properties & 0b0000_0000_0000_0010) >> 1;
    return { bit0, bit1, properties };
}
