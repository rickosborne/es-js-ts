import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.hid_control_point.xml
/**
 * <p>? Suspend ( Refer to Section 7.4.2, Bluetooth HID Profile Specification 1.0</p>
 * <p>? Exit Suspend (Refer to Section 7.4.2, Bluetooth HID Profile Specification 1.0</p>
 */
export interface HidControlPoint {
    /**
     * <p>Format: `uint8`</p>
     * <p>There are no response codes defined for the Suspend and Exit Suspend commands.</p>
     * | Key | Description  |
     * | --- | ------------ |
     * | 0   | Suspend      |
     * | 1   | Exit Suspend |
     *
     * <p>Reserved for future use: 2 to 255</p>
     */
    hidControlPointCommand: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.hid_control_point.xml | Hid Control Point} */
export class HidControlPointImpl implements HidControlPoint {
    public static readonly UUID_PREFIX = 0x2a4c;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.hid_control_point";
    public static readonly NAME = "HID Control Point";

    /** Parse from a DataView into {@link HidControlPoint}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): HidControlPointImpl {
        return new HidControlPointImpl(hidControlPointFromDataView(dataView, indexStart));
    }

    public readonly hidControlPointCommand: number;

    public constructor(hidControlPoint: HidControlPoint) {
        this.hidControlPointCommand = hidControlPoint.hidControlPointCommand;
    }
}

/** Parse from a DataView into {@link HidControlPoint}. */
export function hidControlPointFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): HidControlPoint {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    /** */
    /**
     * | value | description  |
     * | ----- | ------------ |
     * | 0     | Suspend      |
     * | 1     | Exit Suspend |
     */
    const hidControlPointCommand = $dvr.uint8();
    return { hidControlPointCommand };
}
