import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.true_wind_speed.xml
export interface TrueWindSpeed {
    /**
     * <p>Format: `uint16`</p>
     * <p>Unit: `org.bluetooth.unit.velocity.metres_per_second`</p>
     * <p>Unit is in meters per second with a resolution of 0.01 m/s</p>
     */
    trueWindSpeed: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.true_wind_speed.xml | True Wind Speed} */
export class TrueWindSpeedImpl implements TrueWindSpeed {
    public static readonly UUID_PREFIX = 0x2a70;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.true_wind_speed";
    public static readonly NAME = "True Wind Speed";

    /** Parse from a DataView into {@link TrueWindSpeed}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): TrueWindSpeedImpl {
        return new TrueWindSpeedImpl(trueWindSpeedFromDataView(dataView, indexStart));
    }

    public readonly trueWindSpeed: number;

    public constructor(trueWindSpeed: TrueWindSpeed) {
        this.trueWindSpeed = trueWindSpeed.trueWindSpeed;
    }
}

/** Parse from a DataView into {@link TrueWindSpeed}. */
export function trueWindSpeedFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): TrueWindSpeed {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const trueWindSpeed = $dvr.uint16();
    return { trueWindSpeed };
}
