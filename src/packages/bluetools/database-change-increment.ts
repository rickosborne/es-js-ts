import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.database_change_increment.xml
export interface DatabaseChangeIncrement {
    /** <p>Format: `uint32`</p> */
    databaseChangeIncrement: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.database_change_increment.xml | Database Change Increment} */
export class DatabaseChangeIncrementImpl implements DatabaseChangeIncrement {
    public static readonly UUID_PREFIX = 0x2a99;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.database_change_increment";
    public static readonly NAME = "Database Change Increment";

    /** Parse from a DataView into {@link DatabaseChangeIncrement}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): DatabaseChangeIncrementImpl {
        return new DatabaseChangeIncrementImpl(databaseChangeIncrementFromDataView(dataView, indexStart));
    }

    public readonly databaseChangeIncrement: number;

    public constructor(databaseChangeIncrement: DatabaseChangeIncrement) {
        this.databaseChangeIncrement = databaseChangeIncrement.databaseChangeIncrement;
    }
}

/** Parse from a DataView into {@link DatabaseChangeIncrement}. */
export function databaseChangeIncrementFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): DatabaseChangeIncrement {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const databaseChangeIncrement = $dvr.uint32();
    return { databaseChangeIncrement };
}
