import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.descriptor.number_of_digitals.xml
/** <p>The Characteristic Number of Digitals descriptor is used for defining the number of digitals in a characteristic.</p> */
export interface NumberOfDigitals {
    /** <p>Format: `uint8`</p> */
    noOfDigitals: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.descriptor.number_of_digitals.xml | Number Of Digitals} */
export class NumberOfDigitalsImpl implements NumberOfDigitals {
    public static readonly UUID_PREFIX = 0x2909;
    public static readonly TYPE_NAME = "org.bluetooth.descriptor.number_of_digitals";
    public static readonly NAME = "Number of Digitals";

    /** Parse from a DataView into {@link NumberOfDigitals}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): NumberOfDigitalsImpl {
        return new NumberOfDigitalsImpl(numberOfDigitalsFromDataView(dataView, indexStart));
    }

    public readonly noOfDigitals: number;

    public constructor(numberOfDigitals: NumberOfDigitals) {
        this.noOfDigitals = numberOfDigitals.noOfDigitals;
    }
}

/** Parse from a DataView into {@link NumberOfDigitals}. */
export function numberOfDigitalsFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): NumberOfDigitals {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const noOfDigitals = $dvr.uint8();
    return { noOfDigitals };
}
