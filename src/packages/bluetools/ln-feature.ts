import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.ln_feature.xml
/** <p>The LN Feature characteristic is used to report a list of features supported by the device.</p> */
export interface LnFeature {
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    elevationSettingSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    elevationSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    estimatedHorizontalPositionErrorSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    estimatedTimeOfArrivalSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    estimatedVerticalPositionErrorSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    fixRateSettingSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    headingSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    horizontalDilutionOfPrecisionSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    instantaneousSpeedSupported: number;
    /**
     * <p>Format: `32bit`</p>
     *
     * Bit field:
     *
     * | index | size | name                                                        |
     * | ----- | ---- | ----------------------------------------------------------- |
     * | 0     | 1    | Instantaneous Speed Supported                               |
     * | 1     | 1    | Total Distance Supported                                    |
     * | 2     | 1    | Location Supported                                          |
     * | 3     | 1    | Elevation Supported                                         |
     * | 4     | 1    | Heading Supported                                           |
     * | 5     | 1    | Rolling Time Supported                                      |
     * | 6     | 1    | UTC Time Supported                                          |
     * | 7     | 1    | Remaining Distance Supported                                |
     * | 8     | 1    | Remaining Vertical Distance Supported                       |
     * | 9     | 1    | Estimated Time of Arrival Supported                         |
     * | 10    | 1    | Number of Beacons in Solution Supported                     |
     * | 11    | 1    | Number of Beacons in View Supported                         |
     * | 12    | 1    | Time to First Fix Supported                                 |
     * | 13    | 1    | Estimated Horizontal Position Error Supported               |
     * | 14    | 1    | Estimated Vertical Position Error Supported                 |
     * | 15    | 1    | Horizontal Dilution of Precision Supported                  |
     * | 16    | 1    | Vertical Dilution of Precision Supported                    |
     * | 17    | 1    | Location and Speed Characteristic Content Masking Supported |
     * | 18    | 1    | Fix Rate Setting Supported                                  |
     * | 19    | 1    | Elevation Setting Supported                                 |
     * | 20    | 1    | Position Status Supported                                   |
     * | 21    | 11   | Reserved for future use                                     |
     *
     */
    lnFeature: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    locationAndSpeedCharacteristicContentMaskingSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    locationSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    numberOfBeaconsInSolutionSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    numberOfBeaconsInViewSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    positionStatusSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    remainingDistanceSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    remainingVerticalDistanceSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    rollingTimeSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    timeToFirstFixSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    totalDistanceSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    utcTimeSupported: number;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    verticalDilutionOfPrecisionSupported: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.ln_feature.xml | Ln Feature} */
export class LnFeatureImpl implements LnFeature {
    public static readonly UUID_PREFIX = 0x2a6a;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.ln_feature";
    public static readonly NAME = "LN Feature";

    /** Parse from a DataView into {@link LnFeature}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): LnFeatureImpl {
        return new LnFeatureImpl(lnFeatureFromDataView(dataView, indexStart));
    }

    public readonly elevationSettingSupported: number;
    public readonly elevationSupported: number;
    public readonly estimatedHorizontalPositionErrorSupported: number;
    public readonly estimatedTimeOfArrivalSupported: number;
    public readonly estimatedVerticalPositionErrorSupported: number;
    public readonly fixRateSettingSupported: number;
    public readonly headingSupported: number;
    public readonly horizontalDilutionOfPrecisionSupported: number;
    public readonly instantaneousSpeedSupported: number;
    public readonly lnFeature: number;
    public readonly locationAndSpeedCharacteristicContentMaskingSupported: number;
    public readonly locationSupported: number;
    public readonly numberOfBeaconsInSolutionSupported: number;
    public readonly numberOfBeaconsInViewSupported: number;
    public readonly positionStatusSupported: number;
    public readonly remainingDistanceSupported: number;
    public readonly remainingVerticalDistanceSupported: number;
    public readonly rollingTimeSupported: number;
    public readonly timeToFirstFixSupported: number;
    public readonly totalDistanceSupported: number;
    public readonly utcTimeSupported: number;
    public readonly verticalDilutionOfPrecisionSupported: number;

    public constructor(lnFeature: LnFeature) {
        this.elevationSettingSupported = lnFeature.elevationSettingSupported;
        this.elevationSupported = lnFeature.elevationSupported;
        this.estimatedHorizontalPositionErrorSupported = lnFeature.estimatedHorizontalPositionErrorSupported;
        this.estimatedTimeOfArrivalSupported = lnFeature.estimatedTimeOfArrivalSupported;
        this.estimatedVerticalPositionErrorSupported = lnFeature.estimatedVerticalPositionErrorSupported;
        this.fixRateSettingSupported = lnFeature.fixRateSettingSupported;
        this.headingSupported = lnFeature.headingSupported;
        this.horizontalDilutionOfPrecisionSupported = lnFeature.horizontalDilutionOfPrecisionSupported;
        this.instantaneousSpeedSupported = lnFeature.instantaneousSpeedSupported;
        this.lnFeature = lnFeature.lnFeature;
        this.locationAndSpeedCharacteristicContentMaskingSupported = lnFeature.locationAndSpeedCharacteristicContentMaskingSupported;
        this.locationSupported = lnFeature.locationSupported;
        this.numberOfBeaconsInSolutionSupported = lnFeature.numberOfBeaconsInSolutionSupported;
        this.numberOfBeaconsInViewSupported = lnFeature.numberOfBeaconsInViewSupported;
        this.positionStatusSupported = lnFeature.positionStatusSupported;
        this.remainingDistanceSupported = lnFeature.remainingDistanceSupported;
        this.remainingVerticalDistanceSupported = lnFeature.remainingVerticalDistanceSupported;
        this.rollingTimeSupported = lnFeature.rollingTimeSupported;
        this.timeToFirstFixSupported = lnFeature.timeToFirstFixSupported;
        this.totalDistanceSupported = lnFeature.totalDistanceSupported;
        this.utcTimeSupported = lnFeature.utcTimeSupported;
        this.verticalDilutionOfPrecisionSupported = lnFeature.verticalDilutionOfPrecisionSupported;
    }
}

/** Parse from a DataView into {@link LnFeature}. */
export function lnFeatureFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): LnFeature {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const lnFeature = $dvr.uint32();
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const instantaneousSpeedSupported = lnFeature & 0b0000_0000_0000_0000_0000_0000_0000_0001;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const totalDistanceSupported = (lnFeature & 0b0000_0000_0000_0000_0000_0000_0000_0010) >> 1;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const locationSupported = (lnFeature & 0b0000_0000_0000_0000_0000_0000_0000_0100) >> 2;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const elevationSupported = (lnFeature & 0b0000_0000_0000_0000_0000_0000_0000_1000) >> 3;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const headingSupported = (lnFeature & 0b0000_0000_0000_0000_0000_0000_0001_0000) >> 4;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const rollingTimeSupported = (lnFeature & 0b0000_0000_0000_0000_0000_0000_0010_0000) >> 5;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const utcTimeSupported = (lnFeature & 0b0000_0000_0000_0000_0000_0000_0100_0000) >> 6;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const remainingDistanceSupported = (lnFeature & 0b0000_0000_0000_0000_0000_0000_1000_0000) >> 7;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const remainingVerticalDistanceSupported = (lnFeature & 0b0000_0000_0000_0000_0000_0001_0000_0000) >> 8;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const estimatedTimeOfArrivalSupported = (lnFeature & 0b0000_0000_0000_0000_0000_0010_0000_0000) >> 9;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const numberOfBeaconsInSolutionSupported = (lnFeature & 0b0000_0000_0000_0000_0000_0100_0000_0000) >> 10;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const numberOfBeaconsInViewSupported = (lnFeature & 0b0000_0000_0000_0000_0000_1000_0000_0000) >> 11;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const timeToFirstFixSupported = (lnFeature & 0b0000_0000_0000_0000_0001_0000_0000_0000) >> 12;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const estimatedHorizontalPositionErrorSupported = (lnFeature & 0b0000_0000_0000_0000_0010_0000_0000_0000) >> 13;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const estimatedVerticalPositionErrorSupported = (lnFeature & 0b0000_0000_0000_0000_0100_0000_0000_0000) >> 14;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const horizontalDilutionOfPrecisionSupported = (lnFeature & 0b0000_0000_0000_0000_1000_0000_0000_0000) >> 15;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const verticalDilutionOfPrecisionSupported = (lnFeature & 0b0000_0000_0000_0001_0000_0000_0000_0000) >> 16;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const locationAndSpeedCharacteristicContentMaskingSupported = (lnFeature & 0b0000_0000_0000_0010_0000_0000_0000_0000) >> 17;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const fixRateSettingSupported = (lnFeature & 0b0000_0000_0000_0100_0000_0000_0000_0000) >> 18;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const elevationSettingSupported = (lnFeature & 0b0000_0000_0000_1000_0000_0000_0000_0000) >> 19;
    /**
     * | value | description |
     * | ----- | ----------- |
     * | 0     | False       |
     * | 1     | True        |
     */
    const positionStatusSupported = (lnFeature & 0b0000_0000_0001_0000_0000_0000_0000_0000) >> 20;
    return { elevationSettingSupported, elevationSupported, estimatedHorizontalPositionErrorSupported, estimatedTimeOfArrivalSupported, estimatedVerticalPositionErrorSupported, fixRateSettingSupported, headingSupported, horizontalDilutionOfPrecisionSupported, instantaneousSpeedSupported, lnFeature, locationAndSpeedCharacteristicContentMaskingSupported, locationSupported, numberOfBeaconsInSolutionSupported, numberOfBeaconsInViewSupported, positionStatusSupported, remainingDistanceSupported, remainingVerticalDistanceSupported, rollingTimeSupported, timeToFirstFixSupported, totalDistanceSupported, utcTimeSupported, verticalDilutionOfPrecisionSupported };
}
