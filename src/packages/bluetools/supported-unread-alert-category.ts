import { type DataViewReader, dataViewReader } from "./data-view-reader.js";
import { type AlertCategoryIdBitMask, AlertCategoryIdBitMaskImpl } from "./alert-category-id-bit-mask.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.supported_unread_alert_category.xml
/**
 * <p>Category that the server supports for unread alert.</p>
 * <p>The value 0x03 is interpreted that this server supports ?Simple Alert? and ?Email? categories for unread alert.</p>
 * <p>This characteristic uses the Alert Category ID Bit Mask Characteristic. If bit(s) is/are set, it means the server supports the corresponded categories for unread alert.</p>
 */
export interface SupportedUnreadAlertCategory {
    categoryIDBitMask: AlertCategoryIdBitMask;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.supported_unread_alert_category.xml | Supported Unread Alert Category} */
export class SupportedUnreadAlertCategoryImpl implements SupportedUnreadAlertCategory {
    public static readonly UUID_PREFIX = 0x2a48;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.supported_unread_alert_category";
    public static readonly NAME = "Supported Unread Alert Category";

    /** Parse from a DataView into {@link SupportedUnreadAlertCategory}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): SupportedUnreadAlertCategoryImpl {
        return new SupportedUnreadAlertCategoryImpl(supportedUnreadAlertCategoryFromDataView(dataView, indexStart));
    }

    public readonly categoryIDBitMask: AlertCategoryIdBitMask;

    public constructor(supportedUnreadAlertCategory: SupportedUnreadAlertCategory) {
        this.categoryIDBitMask = supportedUnreadAlertCategory.categoryIDBitMask;
    }
}

/** Parse from a DataView into {@link SupportedUnreadAlertCategory}. */
export function supportedUnreadAlertCategoryFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): SupportedUnreadAlertCategory {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const categoryIDBitMask = AlertCategoryIdBitMaskImpl.fromDataView($dvr);
    return { categoryIDBitMask };
}
