import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.vo2_max.xml
/** <p>Maximal Oxygen uptake of a user</p> */
export interface Vo2Max {
    /**
     * <p>Format: `uint8`</p>
     * <p>Unit is in Milliliter per kilogram per minutes with a resolution of 1 .</p>
     */
    vo2Max: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.vo2_max.xml | Vo2 Max} */
export class Vo2MaxImpl implements Vo2Max {
    public static readonly UUID_PREFIX = 0x2a96;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.vo2_max";
    public static readonly NAME = "VO2 Max";

    /** Parse from a DataView into {@link Vo2Max}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): Vo2MaxImpl {
        return new Vo2MaxImpl(vo2MaxFromDataView(dataView, indexStart));
    }

    public readonly vo2Max: number;

    public constructor(vo2Max: Vo2Max) {
        this.vo2Max = vo2Max.vo2Max;
    }
}

/** Parse from a DataView into {@link Vo2Max}. */
export function vo2MaxFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): Vo2Max {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const vo2Max = $dvr.uint8();
    return { vo2Max };
}
