import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.hid_information.xml
/**
 * <p>The HID Information Characteristic returns the HID attributes when read.</p>
 * <p>The HID Information Characteristic contains the HID attributes. The value of this Characteristic is static and can be cached for the lifetime of the bond between the HID device and the HID host.</p>
 */
export interface HidInformation {
    /**
     * <p>Format: `uint16`</p>
     * <p>16-bit unsigned integer representing version number of base USB HID Specification implemented by HID Device</p>
     */
    bcdhid: number;
    /**
     * <p>Format: `8bit`</p>
     * <p>Identifies which country the hardware is localized for. Most hardware is not localized and thus this value would be zero (0).</p>
     */
    bcountrycode: number;
    /**
     * <p>Format: `8bit`</p>
     *
     * Bit field:
     *
     * | index | size | name                    |
     * | ----- | ---- | ----------------------- |
     * | 0     | 1    | RemoteWake              |
     * | 1     | 1    | NormallyConnectable     |
     * | 2     | 6    | Reserved for future use |
     *
     */
    flags: number;
    /**
     * | value | description                            |
     * | ----- | -------------------------------------- |
     * | 0     | The device is not normally connectable |
     * | 1     | The device is normally connectable     |
     */
    normallyconnectable: number;
    /**
     * | value | description                                                                        |
     * | ----- | ---------------------------------------------------------------------------------- |
     * | 0     | The device is not designed to be capable of providing wake-up signal to a HID host |
     * | 1     | The device is designed to be capable of providing wake-up signal to a HID host     |
     */
    remotewake: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.hid_information.xml | Hid Information} */
export class HidInformationImpl implements HidInformation {
    public static readonly UUID_PREFIX = 0x2a4a;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.hid_information";
    public static readonly NAME = "HID Information";

    /** Parse from a DataView into {@link HidInformation}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): HidInformationImpl {
        return new HidInformationImpl(hidInformationFromDataView(dataView, indexStart));
    }

    public readonly bcdhid: number;
    public readonly bcountrycode: number;
    public readonly flags: number;
    public readonly normallyconnectable: number;
    public readonly remotewake: number;

    public constructor(hidInformation: HidInformation) {
        this.bcdhid = hidInformation.bcdhid;
        this.bcountrycode = hidInformation.bcountrycode;
        this.flags = hidInformation.flags;
        this.normallyconnectable = hidInformation.normallyconnectable;
        this.remotewake = hidInformation.remotewake;
    }
}

/** Parse from a DataView into {@link HidInformation}. */
export function hidInformationFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): HidInformation {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const bcdhid = $dvr.uint16();
    const bcountrycode = $dvr.uint8();
    const flags = $dvr.uint8();
    /**
     * | value | description                                                                        |
     * | ----- | ---------------------------------------------------------------------------------- |
     * | 0     | The device is not designed to be capable of providing wake-up signal to a HID host |
     * | 1     | The device is designed to be capable of providing wake-up signal to a HID host     |
     */
    const remotewake = flags & 0b0000_0001;
    /**
     * | value | description                            |
     * | ----- | -------------------------------------- |
     * | 0     | The device is not normally connectable |
     * | 1     | The device is normally connectable     |
     */
    const normallyconnectable = (flags & 0b0000_0010) >> 1;
    return { bcdhid, bcountrycode, flags, normallyconnectable, remotewake };
}
