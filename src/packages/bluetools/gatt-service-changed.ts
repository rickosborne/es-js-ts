import { type DataViewReader, dataViewReader } from "./data-view-reader.js";

// This file is autogenerated.
// Do not edit it by hand, as changes will be lost.
// Upstream source: https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.gatt.service_changed.xml
export interface GattServiceChanged {
    /**
     * <p>Format: `uint16`</p>
     * <p>Minimum: 1</p>
     * <p>Maximum: 65535</p>
     */
    endOfAffectedAttributeHandleRange: number;
    /**
     * <p>Format: `uint16`</p>
     * <p>Minimum: 1</p>
     * <p>Maximum: 65535</p>
     */
    startOfAffectedAttributeHandleRange: number;
}

/** @see {@link https://raw.githubusercontent.com/oesmith/gatt-xml/refs/heads/master/org.bluetooth.characteristic.gatt.service_changed.xml | Gatt Service Changed} */
export class GattServiceChangedImpl implements GattServiceChanged {
    public static readonly UUID_PREFIX = 0x2a05;
    public static readonly TYPE_NAME = "org.bluetooth.characteristic.gatt.service_changed";
    public static readonly NAME = "Service Changed";

    /** Parse from a DataView into {@link GattServiceChanged}. */
    public static fromDataView(dataView: DataView | DataViewReader, indexStart?: number | undefined): GattServiceChangedImpl {
        return new GattServiceChangedImpl(gattServiceChangedFromDataView(dataView, indexStart));
    }

    public readonly endOfAffectedAttributeHandleRange: number;
    public readonly startOfAffectedAttributeHandleRange: number;

    public constructor(gattServiceChanged: GattServiceChanged) {
        this.endOfAffectedAttributeHandleRange = gattServiceChanged.endOfAffectedAttributeHandleRange;
        this.startOfAffectedAttributeHandleRange = gattServiceChanged.startOfAffectedAttributeHandleRange;
    }
}

/** Parse from a DataView into {@link GattServiceChanged}. */
export function gattServiceChangedFromDataView(dataView: DataView | DataViewReader, indexStart: number = 0): GattServiceChanged {
    const $dvr: DataViewReader = dataViewReader(dataView, indexStart);
    const startOfAffectedAttributeHandleRange = $dvr.uint16();
    const endOfAffectedAttributeHandleRange = $dvr.uint16();
    return { endOfAffectedAttributeHandleRange, startOfAffectedAttributeHandleRange };
}
